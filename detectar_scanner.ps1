# Script para detectar lector de c√≥digo de barras
# Ejecutar con: powershell -ExecutionPolicy Bypass .\detectar_scanner.ps1

Write-Host "üîç Detectando lectores de c√≥digo de barras USB..." -ForegroundColor Green
Write-Host "=" * 60

Write-Host "`nüì± DISPOSITIVOS HID (Human Interface Device):" -ForegroundColor Yellow
Get-WmiObject -Class Win32_PnPEntity | Where-Object { 
    $_.Name -match "HID|Input|Scanner|Barcode" 
} | ForEach-Object {
    Write-Host "  ‚úÖ $($_.Name) - $($_.DeviceID)" -ForegroundColor White
}

Write-Host "`nüîå PUERTOS SERIALES (COM):" -ForegroundColor Yellow  
Get-WmiObject -Class Win32_PnPEntity | Where-Object { 
    $_.Name -match "COM\d+|Serial|USB.*Port" 
} | ForEach-Object {
    Write-Host "  ‚úÖ $($_.Name) - $($_.DeviceID)" -ForegroundColor White
}

Write-Host "`nüì∫ DISPOSITIVOS USB GEN√âRICOS:" -ForegroundColor Yellow
Get-WmiObject -Class Win32_PnPEntity | Where-Object { 
    $_.Name -match "USB.*Device|Unknown|Composite" 
} | ForEach-Object {
    Write-Host "  ‚úÖ $($_.Name) - $($_.DeviceID)" -ForegroundColor White
}

Write-Host "`nüîß PUERTOS COM DISPONIBLES:" -ForegroundColor Yellow
[System.IO.Ports.SerialPort]::getportnames() | ForEach-Object {
    Write-Host "  ‚úÖ Puerto $_" -ForegroundColor White
}

Write-Host "`n" + "=" * 60
Write-Host "üí° INSTRUCCIONES:" -ForegroundColor Cyan
Write-Host "1. Desconecta el scanner" -ForegroundColor White
Write-Host "2. Ejecuta este script" -ForegroundColor White  
Write-Host "3. Conecta el scanner" -ForegroundColor White
Write-Host "4. Ejecuta el script otra vez" -ForegroundColor White
Write-Host "5. Compara las diferencias" -ForegroundColor White